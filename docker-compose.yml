services:
  nginx:
    image: nginx:latest
    container_name: books_nginx

    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media

    depends_on:
      - web
    restart: always

  books_db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - books_db:/var/lib/postgresql/data/

    restart: on-failure

  redis:
    image: redis:7
    container_name: books_redis
    restart: always

  web:
    build: .
    container_name: book_api

    volumes:
      - .:/book_api
      - static_volume:/book_api/staticfiles
      - media_volume:/book_api/media

    command: ["gunicorn", "book_api.wsgi:application", "--bind", "0.0.0.0:8000", "--workers=2"]

    ports:
      - "${APPLICATION_PORT}:${DOCKER_EXPOSED_PORT}"
    env_file:
      - .env
    environment:
      - WATCHFILES_FORCE_POLLING=true

    restart: on-failure
    depends_on:
      - books_db
      - redis

  celery:
    build: .
    command: celery -A book_api worker -l info
    container_name: books_celery
    volumes:
      - .:/book_api
    depends_on:
      - books_db
      - redis
    env_file:
      - .env


volumes:
  books_db:
  static_volume:
  media_volume:

